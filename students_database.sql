
create database student;
use student;
CREATE TABLE STUDENT (
    STUDENT_ID INT PRIMARY KEY,
    FIRST_NAME VARCHAR(50),
    LAST_NAME VARCHAR(50),
    GPA DECIMAL(4,2),
    ENROLLMENT_DATE DATETIME,
    MAJOR VARCHAR(100)
);
INSERT INTO STUDENT (STUDENT_ID, FIRST_NAME, LAST_NAME, GPA, ENROLLMENT_DATE, MAJOR) VALUES
(201, 'Shivansh', 'Mahajan', 8.79, '2021-09-01 09:30:00', 'Computer Science'),
(202, 'Umesh', 'Sharma', 8.44, '2021-09-01 08:30:00', 'Mathematics'),
(203, 'Rakesh', 'Kumar', 5.60, '2021-09-01 10:00:00', 'Biology'),
(204, 'Radha', 'Sharma', 9.20, '2021-09-01 12:45:00', 'Chemistry'),
(205, 'Kush', 'Kumar', 7.85, '2021-09-01 08:30:00', 'Physics'),
(206, 'Prem', 'Chopra', 9.56, '2021-09-01 09:24:00', 'History'),
(207, 'Pankaj', 'Vats', 9.78, '2021-09-01 09:32:00', 'English'),
(208, 'Navleen', 'Kaur', 7.00, '2021-09-01 06:30:00', 'Mathematics');
select * from STUDENT;
CREATE TABLE PROGRAM (
    STUDENT_REF_ID INT,
    PROGRAM_NAME VARCHAR(100),
    PROGRAM_START_DATE DATETIME
);
INSERT INTO PROGRAM (STUDENT_REF_ID, PROGRAM_NAME, PROGRAM_START_DATE) VALUES
(201, 'Computer Science', '2021-09-01 00:00:00'),
(202, 'Mathematics', '2021-09-01 00:00:00'),
(208, 'Mathematics', '2021-09-01 00:00:00'),
(205, 'Physics', '2021-09-01 00:00:00'),
(204, 'Chemistry', '2021-09-01 00:00:00'),
(207, 'Psychology', '2021-09-01 00:00:00'),
(206, 'History', '2021-09-01 00:00:00'),
(203, 'Biology', '2021-09-01 00:00:00');
select * from PROGRAM;
CREATE TABLE SCHOLARSHIP (
    STUDENT_REF_ID INT,
    SCHOLARSHIP_AMOUNT DECIMAL(10, 2),
    SCHOLARSHIP_DATE DATETIME
);
INSERT INTO SCHOLARSHIP (STUDENT_REF_ID, SCHOLARSHIP_AMOUNT, SCHOLARSHIP_DATE) VALUES
(201, 5000, '2021-10-15 00:00:00'),
(202, 4500, '2022-08-18 00:00:00'),
(203, 3000, '2022-01-25 00:00:00'),
(204, 4000, '2021-10-15 00:00:00');
select * from SCHOLARSHI;
SELECT upper(FIRST_NAME)as STUDENT_ from STUDENT;
SELECT MAJOR FROM STUDENT group by(MAJOR)
SELECT SUBSTRING(FIRST_NAME,1,3) FROM STUDENT
SELECT INSTR(LOWER(FIRST_NAME),'a') FROM STUDENT WHERE FIRST_NAME='Shivansh';
SELECT DISTINCT MAJOR, LENGTH(MAJOR) FROM STUDENT;
SELECT REPLACE(FIRST_NAME,'a','A')FROM STUDENT;
SELECT CONCAT(FIRST_NAME, LAST_NAME) AS COMPLETE_NAME FROM STUDENT;
SELECT*FROM STUDENT ORDER BY FIRST_NAME, MAJOR DESC;
SELECT*FROM STUDENT WHERE FIRST_NAME IN('Prem','Shivansh');
SELECT * FROM STUDENT WHERE FIRST_NAME NOT IN('Prem', 'Shivansh');
SELECT*FROM STUDENT WHERE FIRST_NAME LIKE '%a';
SELECT*FROM STUDENT WHERE FIRST_NAME LIKE'---a';
 SELECT* FROM STUDENT WHERE GPA BETWEEN 9.00 AND 9.99;
 SELECT MAJOR, COUNT(*) AS TOTAL_COUNT FROM STUDENT WHERE MAJOR= 'Computer Science';
SELECT MAJOR, COUNT(MAJOR) FROM STUDENT GROUP BY MAJOR ORDER BY COUNT(MAJOR)DESC; 
SELECT STUDENT.FIRST_NAME, STUDENT.LAST_NAME, scholarship.SCHOLARSHIP_AMOUNT, scholarship.SCHOLARSHIP_DATE from student INNER JOIN scholarship ON Student. STUDENT_ID = scholarship.STUDENT_REF_ID;
SELECT*FROM Student WHERE student_id % 2 !=0;
SELECT*FROM Student WHERE student_id %2=0;
SELECT Student.FIRST_NAME,Student.LAST_NAME,
Scholarship.SCHOLARSHIP_AMOUNT,
Scholarship.SCHOLARSHIP_DATE FROM Student LEFT JOIN
Scholarship ON Student.STUDENT_ID=
Scholarship. STUDENT_REF_ID;
SELECT*FROM Student ORDER BY GPA DESC LIMIT 5;
SELECT *
FROM Student s1
WHERE 4 = (
    SELECT COUNT(DISTINCT s2.GPA)
    FROM Student s2
    WHERE s2.GPA >= s1.GPA
);
SELECT s1.* FROM Student s1, Student s2 WHERE s1. GPA = s2. GPA AND s1. Student_id!= s2. Student_id;
SELECT MAX(GPA) FROM Student
WHERE GPA NOT IN(SELECT MAX(GPA) FROM Student);
SELECT s1.* FROM Student s1, Student s2 WHERE s1. GPA = s2. GPA AND s1. Student_id!= s2. Student_id;
SELECT MAX(GPA) FROM Student
WHERE GPA NOT IN(SELECT MAX(GPA) FROM Student);
SELECT * FROM student
UNION ALL SELECT * FROM Student ORDER BY STUDENT_ID;
SELECT STUDENT_ID FROM Student
WHERE STUDENT_ID NOT IN(SELECT STUDENT_REF_ID FROM Scholarship);
SELECT* FROM Student 
LIMIT (SELECT FLOOR (COUNT(*)/2) FROM Student);
SELECT MAJOR, COUNT(MAJOR) AS MAJOR_COUNT FROM Student GROUP BY MAJOR HAVING COUNT(MAJOR)<4;
SELECT MAJOR, COUNT(MAJOR) AS ALL_MAJOR FROM Student GROUP BY MAJOR;
SELECT*FROM Student WHERE STUDENT_ID=(SELECT MAX(STUDENT_ID)FROM STUDENT);
SELECT*FROM Student WHERE STUDENT_ID=(SELECT MIN(STUDENT_ID)FROM Student);
SELECT *
FROM (
    SELECT *
    FROM Student
    ORDER BY STUDENT_ID DESC
    LIMIT 5
) AS subquery
ORDER BY STUDENT_ID;
SELECT DISTINCT S1.GPA
FROM Student S1
WHERE 3 >= (SELECT COUNT(DISTINCT S2.GPA) FROM Student S2 WHERE S1.GPA <= S2.GPA)
ORDER BY S1.GPA DESC;
SELECT DISTINCT S1.GPA
FROM Student S1
WHERE n = (SELECT COUNT(DISTINCT S2.GPA) FROM Student S2 WHERE S1.GPA <= S2.GPA)
ORDER BY S1.GPA DESC;
SELECT DISTINCT S1.GPA
FROM Student S1
WHERE 3 >= (SELECT COUNT(DISTINCT S2.GPA) FROM Student S2 WHERE S1.GPA >= S2.GPA)
ORDER BY S1.GPA ASC;
SELECT MAJOR, MAX(GPA) AS MAXGPA FROM Student GROUP BY MAJOR;
SELECT FIRST_NAME, GPA FROM Student WHERE GPA=(SELECT MAX(GPA) FROM Student);
SELECT CURDATE(); -- To get the current date
SELECT NOW();    -- To get the current date and time
CREATE TABLE CloneTable AS SELECT*FROM Student;
UPDATE Student SET GPA=7.5 WHERE MAJOR = 'Computer Science';
SELECT MAJOR, AVG(GPA) AS AVERAGE_GPA FROM Student GROUP BY MAJOR;
SELECT*FROM Student ORDER BY GPA DESC LIMIT 3;
SELECT MAJOR, COUNT(STUDENT_ID) AS HIGH_GPA_COUNT
FROM Student
WHERE GPA > 7.5
GROUP BY MAJOR;
SELECT*FROM Student WHERE GPA=(SELECT GPA FROM Student WHERE STUDENT_ID=201);
